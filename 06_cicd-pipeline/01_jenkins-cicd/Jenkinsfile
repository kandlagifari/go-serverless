pipeline {
  agent any
  tools {
    go 'go'
  }
  environment {
    BUCKET = 'assalamualaikum-serverless-go-bucket'
    LOCALSTACK_ENDPOINT = 'http://localstack:4566'
    AWS_REGION = 'us-east-1'
  }
  stages {
    stage('Git Checkout') {
      steps {
        git branch: 'main', credentialsId: 'github-credentials', url: 'https://github.com/kandlagifari/go-serverless.git'
        script {
          def scmVars = checkout([$class: 'GitSCM',
            branches: scm.branches,
            doGenerateSubmoduleConfigurations: scm.doGenerateSubmoduleConfigurations,
            extensions: scm.extensions + [
              [$class: 'LocalBranch'],
              [$class: 'CloneOption', noTags: false],
              pruneTags(true),
            ],
            submoduleCfg: scm.submoduleCfg,
            userRemoteConfigs: scm.userRemoteConfigs
          ])
          env.GIT_COMMIT = scmVars.GIT_COMMIT
        }
      }
    }
    stage('Test') {
      steps {
        dir('./06_cicd-pipeline/01_jenkins-cicd/findAll') {
          sh 'go clean -modcache'
          sh 'go get -u github.com/golang/lint/golint'
          sh 'go get -t ./...'
          sh 'golint -set_exit_status'
          sh 'go vet .'
          sh 'go test .'
        }
      }
    }
    stage('Build') {
      steps {
        dir('./06_cicd-pipeline/01_jenkins-cicd/findAll') {
          sh 'GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -o bootstrap main.go'
          sh "zip ${GIT_COMMIT}.zip bootstrap"
        }
      }
    }
    stage('Push') {
      steps {
        dir('./06_cicd-pipeline/01_jenkins-cicd/findAll') {
          sh "aws s3 cp ${GIT_COMMIT}.zip s3://${BUCKET} --endpoint-url=${LOCALSTACK_ENDPOINT}"
          sh "aws s3 ls s3://${BUCKET} --endpoint-url=${LOCALSTACK_ENDPOINT}"
        }
      }
    }
    stage('Deploy') {
      steps {
        dir('./06_cicd-pipeline/01_jenkins-cicd/findAll') {
          sh "aws lambda update-function-code \
            --function-name FindAllMovies \
            --s3-bucket ${BUCKET} \
            --s3-key ${GIT_COMMIT}.zip \
            --region ${AWS_REGION} \
            --endpoint-url=${LOCALSTACK_ENDPOINT}"
        }
      }
    }
  }
}